# Smart Assistant Backend Development Environment
# 
# Provides all necessary services for local development including
# PostgreSQL, Qdrant vector database, and Redis cache.

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: smart-assistant-postgres
    environment:
      POSTGRES_DB: smart_assistant
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: smart-assistant-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:6333/"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: smart-assistant-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    
  # Smart Assistant Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: smart-assistant-backend
    depends_on:
      - postgres
      - qdrant
      - redis
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app/app
      - ./backend/.env:/app/.env
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/smart_assistant
      - QDRANT_URL=http://qdrant:6333
      - REDIS_URL=redis://redis:6379
    restart: unless-stopped
    
  # Smart Assistant Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: smart-assistant-frontend
    depends_on:
      - backend
    ports:
      - "80:80"
    environment:
      - BACKEND_URL=http://backend:8000
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Backend API (for development)
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    container_name: smart-assistant-api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/smart_assistant
      - QDRANT_URL=http://qdrant:6333
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=development
    depends_on:
      - postgres
      - qdrant  
      - redis
    volumes:
      - ./app:/app/app
      - ./.env:/app/.env
    profiles:
      - full-stack

volumes:
  postgres_data:
  qdrant_data:
  redis_data:

networks:
  default:
    name: smart-assistant-network
