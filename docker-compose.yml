# Smart Assistant Backend Development Environment
# 
# Provides all necessary services for local development including
# PostgreSQL, Qdrant vector database, and Redis cache.

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: smart-assistant-postgres
    environment:
      POSTGRES_DB: smart_assistant
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    profiles:
      - data

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: smart-assistant-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:6333/"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: smart-assistant-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    profiles:
      - data
    
  # Smart Assistant Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: smart-assistant-backend
    depends_on:
      postgres:
        condition: service_healthy
      qdrant:
        condition: service_started
      redis:
        condition: service_started
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app/app
      - ./backend/.env:/app/.env
    environment:
      - DATABASE_URL=sqlite:///data/webui.db
      - QDRANT_URL=http://qdrant:6333
      - REDIS_URL=redis://redis:6379
    restart: unless-stopped
    
  # Open WebUI (collocated front+backend)
  webui:
    build:
      context: ./original-openwebui
      dockerfile: Dockerfile
    container_name: smart-assistant-webui
    depends_on:
      - backend
    environment:
      - PORT=8080
      - OPENAI_API_BASE_URL=
      - WEBUI_SECRET_KEY=dev
      - SMART_ASSISTANT_URL=http://backend:8000
    ports:
      - "8080:8080"
    volumes:
      - ./original-openwebui/backend/data:/app/backend/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  qdrant_data:
  redis_data:

networks:
  default:
    name: smart-assistant-network
