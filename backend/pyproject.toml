[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "smart-assistant-backend"
version = "0.1.0"
description = "Unified Smart Assistant Backend"
readme = "README.md"
requires-python = ">=3.10,<3.13"
license = "MIT"
authors = [
    { name = "Smart Assistant Team" }
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]
dependencies = [
    # Core FastAPI and async dependencies
    "fastapi",
    "uvicorn[standard]",
    "python-multipart",
    
    # Database dependencies
    "sqlalchemy[asyncio]",
    "asyncpg",
    "alembic",
    "aiosqlite",
    
    # Vector database
    "qdrant-client",
    
    # Redis for caching
    "redis",
    
    # AI/ML dependencies
    "google-generativeai",
    "openai",
    
    # HTTP client
    "httpx",
    "aiohttp",
    
    # Authentication and security
    "python-jose[cryptography]",
    "passlib[bcrypt]",
    
    # PDF processing
    "pdfplumber",
    "PyPDF2",
    
    # Configuration management
    "pydantic-settings",
    "pydantic[email]",
    "python-dotenv",
    
    # Logging
    "structlog",
    
    # WebSocket client for Bright Data
    "websockets",
    
    # Airtable integration
    "pyairtable",
    
    # Aiocache
    "aiocache"
    ,"neo4j"
    ,"networkx"
    ,"numpy"
    ,"pandas"
    ,"pyarrow"
    ,"graphrag==2.4.0"  # Pinned GraphRAG version compatible with Python <3.13
]

[project.scripts]
smartctl = "app.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["app*", "scripts*"]
exclude = ["data*", "node_modules*", "tests*"]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-asyncio",
    "black",
    "isort",
]

[tool.pytest]
testpaths = ["tests"]
python_files = "test_*.py"

[tool.black]
line-length = 88
target-version = ["py39"]

[tool.isort]
profile = "black"
